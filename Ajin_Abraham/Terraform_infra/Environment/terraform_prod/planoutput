Acquiring state lock. This may take a few moments...

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  [32m+[0m create[0m

Terraform will perform the following actions:

[1m  # azurerm_resource_group.main[0m will be created
[0m  [32m+[0m[0m resource "azurerm_resource_group" "main" {
      [32m+[0m[0m id       = (known after apply)
      [32m+[0m[0m location = "eastus"
      [32m+[0m[0m name     = "project-2"
      [32m+[0m[0m tags     = {
          [32m+[0m[0m "Environment"   = "prod"
          [32m+[0m[0m "Resource_type" = "resource_group"
          [32m+[0m[0m "Terraform"     = "true"
        }
    }

[1m  # module.acr.azurerm_container_registry.this[0m will be created
[0m  [32m+[0m[0m resource "azurerm_container_registry" "this" {
      [32m+[0m[0m admin_enabled                 = false
      [32m+[0m[0m admin_password                = (sensitive value)
      [32m+[0m[0m admin_username                = (known after apply)
      [32m+[0m[0m encryption                    = (known after apply)
      [32m+[0m[0m export_policy_enabled         = true
      [32m+[0m[0m id                            = (known after apply)
      [32m+[0m[0m location                      = "eastus"
      [32m+[0m[0m login_server                  = (known after apply)
      [32m+[0m[0m name                          = "urolimepoc"
      [32m+[0m[0m network_rule_bypass_option    = "AzureServices"
      [32m+[0m[0m network_rule_set              = (known after apply)
      [32m+[0m[0m public_network_access_enabled = true
      [32m+[0m[0m resource_group_name           = "project-2"
      [32m+[0m[0m retention_policy              = (known after apply)
      [32m+[0m[0m sku                           = "Standard"
      [32m+[0m[0m trust_policy                  = (known after apply)
      [32m+[0m[0m zone_redundancy_enabled       = false
    }

[1m  # module.vnet.azurerm_network_security_group.acr_nsg[0m will be created
[0m  [32m+[0m[0m resource "azurerm_network_security_group" "acr_nsg" {
      [32m+[0m[0m id                  = (known after apply)
      [32m+[0m[0m location            = "eastus"
      [32m+[0m[0m name                = "acr-subnet-nsg"
      [32m+[0m[0m resource_group_name = "project-2"
      [32m+[0m[0m security_rule       = (known after apply)
    }

[1m  # module.vnet.azurerm_network_security_group.storage_nsg[0m will be created
[0m  [32m+[0m[0m resource "azurerm_network_security_group" "storage_nsg" {
      [32m+[0m[0m id                  = (known after apply)
      [32m+[0m[0m location            = "eastus"
      [32m+[0m[0m name                = "storage-subnet-nsg"
      [32m+[0m[0m resource_group_name = "project-2"
      [32m+[0m[0m security_rule       = (known after apply)
    }

[1m  # module.vnet.azurerm_network_security_rule.acr_allow_ssh[0m will be created
[0m  [32m+[0m[0m resource "azurerm_network_security_rule" "acr_allow_ssh" {
      [32m+[0m[0m access                      = "Allow"
      [32m+[0m[0m destination_address_prefix  = "*"
      [32m+[0m[0m destination_port_range      = "22"
      [32m+[0m[0m direction                   = "Inbound"
      [32m+[0m[0m id                          = (known after apply)
      [32m+[0m[0m name                        = "Allow-SSH"
      [32m+[0m[0m network_security_group_name = "acr-subnet-nsg"
      [32m+[0m[0m priority                    = 100
      [32m+[0m[0m protocol                    = "Tcp"
      [32m+[0m[0m resource_group_name         = "project-2"
      [32m+[0m[0m source_address_prefix       = "*"
      [32m+[0m[0m source_port_range           = "*"
    }

[1m  # module.vnet.azurerm_subnet.acr[0m will be created
[0m  [32m+[0m[0m resource "azurerm_subnet" "acr" {
      [32m+[0m[0m address_prefixes                               = [
          [32m+[0m[0m "10.2.2.0/24",
        ]
      [32m+[0m[0m default_outbound_access_enabled                = true
      [32m+[0m[0m enforce_private_link_endpoint_network_policies = (known after apply)
      [32m+[0m[0m enforce_private_link_service_network_policies  = (known after apply)
      [32m+[0m[0m id                                             = (known after apply)
      [32m+[0m[0m name                                           = "acr-subnet"
      [32m+[0m[0m private_endpoint_network_policies              = (known after apply)
      [32m+[0m[0m private_endpoint_network_policies_enabled      = (known after apply)
      [32m+[0m[0m private_link_service_network_policies_enabled  = (known after apply)
      [32m+[0m[0m resource_group_name                            = "project-2"
      [32m+[0m[0m virtual_network_name                           = "prod-vm"
    }

[1m  # module.vnet.azurerm_subnet.aks[0m will be created
[0m  [32m+[0m[0m resource "azurerm_subnet" "aks" {
      [32m+[0m[0m address_prefixes                               = [
          [32m+[0m[0m "10.2.1.0/24",
        ]
      [32m+[0m[0m default_outbound_access_enabled                = true
      [32m+[0m[0m enforce_private_link_endpoint_network_policies = (known after apply)
      [32m+[0m[0m enforce_private_link_service_network_policies  = (known after apply)
      [32m+[0m[0m id                                             = (known after apply)
      [32m+[0m[0m name                                           = "aks-subnet"
      [32m+[0m[0m private_endpoint_network_policies              = (known after apply)
      [32m+[0m[0m private_endpoint_network_policies_enabled      = (known after apply)
      [32m+[0m[0m private_link_service_network_policies_enabled  = (known after apply)
      [32m+[0m[0m resource_group_name                            = "project-2"
      [32m+[0m[0m virtual_network_name                           = "prod-vm"
    }

[1m  # module.vnet.azurerm_subnet.storage[0m will be created
[0m  [32m+[0m[0m resource "azurerm_subnet" "storage" {
      [32m+[0m[0m address_prefixes                               = [
          [32m+[0m[0m "10.2.3.0/24",
        ]
      [32m+[0m[0m default_outbound_access_enabled                = true
      [32m+[0m[0m enforce_private_link_endpoint_network_policies = (known after apply)
      [32m+[0m[0m enforce_private_link_service_network_policies  = (known after apply)
      [32m+[0m[0m id                                             = (known after apply)
      [32m+[0m[0m name                                           = "storage-subnet"
      [32m+[0m[0m private_endpoint_network_policies              = (known after apply)
      [32m+[0m[0m private_endpoint_network_policies_enabled      = (known after apply)
      [32m+[0m[0m private_link_service_network_policies_enabled  = (known after apply)
      [32m+[0m[0m resource_group_name                            = "project-2"
      [32m+[0m[0m virtual_network_name                           = "prod-vm"
    }

[1m  # module.vnet.azurerm_subnet_network_security_group_association.acr_nsg_association[0m will be created
[0m  [32m+[0m[0m resource "azurerm_subnet_network_security_group_association" "acr_nsg_association" {
      [32m+[0m[0m id                        = (known after apply)
      [32m+[0m[0m network_security_group_id = (known after apply)
      [32m+[0m[0m subnet_id                 = (known after apply)
    }

[1m  # module.vnet.azurerm_subnet_network_security_group_association.storage_nsg_association[0m will be created
[0m  [32m+[0m[0m resource "azurerm_subnet_network_security_group_association" "storage_nsg_association" {
      [32m+[0m[0m id                        = (known after apply)
      [32m+[0m[0m network_security_group_id = (known after apply)
      [32m+[0m[0m subnet_id                 = (known after apply)
    }

[1m  # module.vnet.azurerm_virtual_network.main[0m will be created
[0m  [32m+[0m[0m resource "azurerm_virtual_network" "main" {
      [32m+[0m[0m address_space       = [
          [32m+[0m[0m "10.2.0.0/16",
        ]
      [32m+[0m[0m dns_servers         = (known after apply)
      [32m+[0m[0m guid                = (known after apply)
      [32m+[0m[0m id                  = (known after apply)
      [32m+[0m[0m location            = "eastus"
      [32m+[0m[0m name                = "prod-vm"
      [32m+[0m[0m resource_group_name = "project-2"
      [32m+[0m[0m subnet              = (known after apply)
    }

[1mPlan:[0m 11 to add, 0 to change, 0 to destroy.
[0m
Changes to Outputs:
  [32m+[0m[0m resource_group_name = "project-2"
[90m
â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€[0m

Note: You didn't use the -out option to save this plan, so Terraform can't
guarantee to take exactly these actions if you run "terraform apply" now.
Releasing state lock. This may take a few moments...
